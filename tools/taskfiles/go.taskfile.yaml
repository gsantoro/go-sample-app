version: '3'

# golang
# ----------------------------------------------------------------
#
# note: run from ../Taskfile.yaml

includes:
  swagger: ./swagger.taskfile.yaml

vars:
  GOOS: "linux"
  GOARCH: amd64

tasks:  
  kill:
    cmds:
      - echo "Killing server process."
      - pkill {{.COMMAND}} || true
    vars:
      COMMAND:
        sh: echo $COMMAND

  build:
    cmds:
      - GOOS={{.CMD_GOOS}} GOARCH={{.CMD_GOARCH}} go build -v -tags=go_json -o build/{{.COMMAND}} cmd/{{.COMMAND}}.go
    vars:
      CMD_GOOS:
        sh: echo $CMD_GOOS
      CMD_GOARCH: 
        sh: echo $CMD_GOARCH
      COMMAND:
        sh: echo $COMMAND

  build-clean:
    cmds:
      - echo "Removing old binary"
      - rm -rf ../build/* || true

  run:  
    cmds: 
      - ./build/{{.COMMAND}}
    vars:
      COMMAND:
        sh: echo $COMMAND

  lint:
    cmds:
      - golangci-lint run --fast ../...
  
  fmt:
    cmds:
      - gofmt -l -w ..

  # udpate dependencies
  update:
    cmds:
      - go get -u ./...
      - go mod tidy

  # NOTE: kill and rebuild
  rebuild:
    cmds: 
      - task: kill
      - task: build-clean
      - echo "Building and restarting a new server instance"
      # - task: swagger:init # todo: fix error
      # - task: lint # todo: fix error
      - task: fmt
      - task: build
      - task: health

  health:
    cmds:
      - open http://{{.HOSTNAME}}:{{.PORT}}/api/v1/health
    vars:
      HOSTNAME:
        sh: echo $HOSTNAME
      PORT: 
        sh: echo $PORT

  air:
    cmds: 
      - air -c .air.toml

  vuln:
    cmds:
      - govulncheck ./...